{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ngx-ui-loader/lib/core/ngx-ui-loader.enums.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.contants.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader-config.token.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.service.ts","ng://ngx-ui-loader/lib/core/coercion.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.component.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader-blurred.directive.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.module.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router-config.token.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router.constants.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router.module.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http-config.token.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.constants.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.interceptor.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","ballScaleMultiple","ballSpin","ballSpinClockwise","ballSpinClockwiseFadeRotating","ballSpinFadeRotating","chasingDots","circle","cubeGrid","doubleBounce","fadingCircle","foldingCube","pulse","rectangleBounce","rectangleBounceParty","rectangleBouncePulseOut","rectangleBouncePulseOutRapid","rotatingPlane","squareJellyBox","squareLoader","threeBounce","threeStrings","wanderingCubes","bottomCenter","bottomLeft","bottomRight","centerCenter","centerLeft","centerRight","topCenter","topLeft","topRight","leftToRight","rightToLeft","DEFAULT_TASK_ID","UNKNOWN_TASK_ID","SPINNER_CONFIG","ball-scale-multiple","divs","class","ball-spin","ball-spin-clockwise","ball-spin-clockwise-fade-rotating","ball-spin-fade-rotating","chasing-dots","cube-grid","double-bounce","fading-circle","folding-cube","rectangle-bounce","rectangle-bounce-party","rectangle-bounce-pulse-out","rectangle-bounce-pulse-out-rapid","rotating-plane","square-jelly-box","square-loader","three-bounce","three-strings","wandering-cubes","DEFAULT_CONFIG","bgsColor","bgsOpacity","bgsPosition","POSITION","bgsSize","bgsType","SPINNER","blur","fgsColor","fgsPosition","fgsSize","fgsType","gap","logoPosition","logoSize","logoUrl","masterLoaderId","overlayBorderRadius","overlayColor","pbColor","pbDirection","PB_DIRECTION","pbThickness","hasProgressBar","text","textColor","textPosition","threshold","NGX_UI_LOADER_CONFIG_TOKEN","InjectionToken","NgxUiLoaderService","config","defaultConfig","loaders","showForeground","BehaviorSubject","loaderId","isShow","showForeground$","asObservable","showBackground","showBackground$","fgClosing","foregroundClosing$","bgClosing","backgroundClosing$","onStart","Subject","onStart$","onStop","onStop$","initLoaderData","isMaster","throwErrorIfMasterLoaderExists","throwErrorIfLoaderExists","isBound","hasForeground","next","taskId","isForeground","hasBackground","createLoaderData","updateLoaderId","newLoaderId","throwErrorIfLoaderNotExist","background","foreground","console","warn","destroyLoaderData","stopLoaderAll","getDefaultConfig","getLoaders","JSON","parse","stringify","getLoader","throwErrorIfMasterLoaderNotExist","getStatus","waitingBackground","waitingForeground","keys","startLoader","undefined","foregroundRunning","Date","now","backgroundCloseout","start","startBackgroundLoader","startBackground","stopLoader","_this","setTimeout","foregroundCloseout","stop","stopBackgroundLoader","stopBackground","stopAll","Error","useIsBoundProp","Injectable","args","providedIn","Optional","type","Inject","coerceNumber","value","fallbackValue","isNaN","parseFloat","Number","NgxUiLoaderComponent","domSanitizer","ngxService","initialized","ngOnInit","initializeSpinners","determinePositions","validate","trustedLogoUrl","bypassSecurityTrustResourceUrl","showForegroundWatcher","subscribe","data","showBackgroundWatcher","foregroundClosingWatcher","foregroundClosing","backgroundClosingWatcher","backgroundClosing","ngOnChanges","changes","bgsTypeChange","bgsPositionChange","fgsTypeChange","loaderIdChange","logoUrlChange","pbDirectionChange","previousValue","fgDivs","Array","fill","fgSpinnerClass","bgDivs","bgSpinnerClass","logoTop","spinnerTop","textTop","startsWith","bypassSecurityTrustStyle","inputName","validTypeObj","map","k","findIndex","v","error","ngOnDestroy","unsubscribe","Component","selector","template","DomSanitizer","Input","NgxUiLoaderBlurredDirective","elementRef","renderer","ngxUiLoaderService","blurNumber","defineProperty","filterValue","setStyle","nativeElement","Directive","ElementRef","Renderer2","NgxUiLoaderModule","forRoot","ngxUiLoaderConfig","ngModule","providers","provide","useValue","NgModule","imports","CommonModule","declarations","exports","NGX_UI_LOADER_ROUTER_CONFIG_TOKEN","ROUTER_LOADER_ID","NgxUiLoaderRouterModule","parentModule","router","events","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","routerConfig","decorators","SkipSelf","Router","NGX_UI_LOADER_HTTP_CONFIG_TOKEN","HTTP_LOADER_ID","NgxUiLoaderHttpInterceptor","count","exclude","url","toLowerCase","intercept","req","handle","pipe","finalize","NgxUiLoaderHttpModule","httpConfig","HTTP_INTERCEPTORS","useClass","multi"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Available spinner types\n */\nexport enum SPINNER {\n  ballScaleMultiple = 'ball-scale-multiple',\n  ballSpin = 'ball-spin',\n  ballSpinClockwise = 'ball-spin-clockwise',\n  ballSpinClockwiseFadeRotating = 'ball-spin-clockwise-fade-rotating',\n  ballSpinFadeRotating = 'ball-spin-fade-rotating',\n  chasingDots = 'chasing-dots',\n  circle = 'circle',\n  cubeGrid = 'cube-grid',\n  doubleBounce = 'double-bounce',\n  fadingCircle = 'fading-circle',\n  foldingCube = 'folding-cube',\n  pulse = 'pulse',\n  rectangleBounce = 'rectangle-bounce',\n  rectangleBounceParty = 'rectangle-bounce-party',\n  rectangleBouncePulseOut = 'rectangle-bounce-pulse-out',\n  rectangleBouncePulseOutRapid = 'rectangle-bounce-pulse-out-rapid',\n  rotatingPlane = 'rotating-plane',\n  squareJellyBox = 'square-jelly-box',\n  squareLoader = 'square-loader',\n  threeBounce = 'three-bounce',\n  threeStrings = 'three-strings',\n  wanderingCubes = 'wandering-cubes',\n}\n\n/**\n * Available postions\n */\nexport enum POSITION {\n  bottomCenter = 'bottom-center',\n  bottomLeft = 'bottom-left',\n  bottomRight = 'bottom-right',\n  centerCenter = 'center-center',\n  centerLeft = 'center-left',\n  centerRight = 'center-right',\n  topCenter = 'top-center',\n  topLeft = 'top-left',\n  topRight = 'top-right'\n}\n\n/**\n * Progress bar directions\n */\nexport enum PB_DIRECTION {\n  leftToRight = 'ltr',\n  rightToLeft = 'rtl'\n}\n","import { NgxUiLoaderConfig } from './ngx-ui-loader-config';\nimport { POSITION, PB_DIRECTION, SPINNER } from './ngx-ui-loader.enums';\n\n/**\n * The default value of task id\n */\nexport const DEFAULT_TASK_ID = 'default';\n\n/**\n * The default value of loader id\n */\nexport const DEFAULT_MASTER_LOADER_ID = 'master';\n\nexport const CLOSING_TIME = 1100;\n\nexport const WAITING_FOR_OVERLAY_DISAPPEAR = 500;\n\nexport const UNKNOWN_TASK_ID = 'unknown-task-id';\n\n/**\n * The configuration of spinners\n */\nexport const SPINNER_CONFIG = {\n  'ball-scale-multiple': {\n    divs: 3,\n    class: 'sk-ball-scale-multiple'\n  },\n  'ball-spin': {\n    divs: 8,\n    class: 'sk-ball-spin'\n  },\n  'ball-spin-clockwise': {\n    divs: 8,\n    class: 'sk-ball-spin-clockwise'\n  },\n  'ball-spin-clockwise-fade-rotating': {\n    divs: 8,\n    class: 'sk-ball-spin-clockwise-fade-rotating'\n  },\n  'ball-spin-fade-rotating': {\n    divs: 8,\n    class: 'sk-ball-spin-fade-rotating'\n  },\n  'chasing-dots': {\n    divs: 2,\n    class: 'sk-chasing-dots'\n  },\n  'circle': {\n    divs: 12,\n    class: 'sk-circle'\n  },\n  'cube-grid': {\n    divs: 9,\n    class: 'sk-cube-grid'\n  },\n  'double-bounce': {\n    divs: 2,\n    class: 'sk-double-bounce'\n  },\n  'fading-circle': {\n    divs: 12,\n    class: 'sk-fading-circle'\n  },\n  'folding-cube': {\n    divs: 4,\n    class: 'sk-folding-cube'\n  },\n  'pulse':  {\n    divs: 1,\n    class: 'sk-pulse'\n  },\n  'rectangle-bounce': {\n    divs: 5,\n    class: 'sk-rectangle-bounce'\n  },\n  'rectangle-bounce-party': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-party'\n  },\n  'rectangle-bounce-pulse-out': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-pulse-out'\n  },\n  'rectangle-bounce-pulse-out-rapid': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-pulse-out-rapid'\n  },\n  'rotating-plane': {\n    divs: 1,\n    class: 'sk-rotating-plane'\n  },\n  'square-jelly-box': {\n    divs: 2,\n    class: 'sk-square-jelly-box'\n  },\n  'square-loader': {\n    divs: 1,\n    class: 'sk-square-loader'\n  },\n  'three-bounce': {\n    divs: 3,\n    class: 'sk-three-bounce'\n  },\n  'three-strings': {\n    divs: 3,\n    class: 'sk-three-strings'\n  },\n  'wandering-cubes': {\n    divs: 2,\n    class: 'sk-wandering-cubes'\n  },\n};\n\n/**\n * The default configuration of ngx-ui-loader\n */\nexport const DEFAULT_CONFIG: NgxUiLoaderConfig = {\n  bgsColor: '#00ACC1',\n  bgsOpacity: 0.5,\n  bgsPosition: POSITION.bottomRight,\n  bgsSize: 60,\n  bgsType: SPINNER.ballSpinClockwise,\n  blur: 5,\n  fgsColor: '#00ACC1',\n  fgsPosition: POSITION.centerCenter,\n  fgsSize: 60,\n  fgsType: SPINNER.ballSpinClockwise,\n  gap: 24,\n  logoPosition: POSITION.centerCenter,\n  logoSize: 120,\n  logoUrl: '',\n  masterLoaderId: DEFAULT_MASTER_LOADER_ID,\n  overlayBorderRadius: '0',\n  overlayColor: 'rgba(40, 40, 40, 0.8)',\n  pbColor: '#00ACC1',\n  pbDirection: PB_DIRECTION.leftToRight,\n  pbThickness: 3,\n  hasProgressBar: true,\n  text: '',\n  textColor: '#FFFFFF',\n  textPosition: POSITION.centerCenter,\n  threshold: 500\n};\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\n\n/**\n * Injection token for ngx-ui-loader configuration\n */\nexport const NGX_UI_LOADER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderConfig>('ngxUiLoaderCustom.config');\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { CLOSING_TIME, DEFAULT_TASK_ID, DEFAULT_CONFIG, UNKNOWN_TASK_ID, WAITING_FOR_OVERLAY_DISAPPEAR } from './ngx-ui-loader.contants';\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\nimport { Loaders, Loader, ShowEvent, StartStopEvent, Task } from './ngx-ui-loader.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxUiLoaderService {\n\n  // Public properties\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  backgroundClosing$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  foregroundClosing$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  onStart$: Observable<StartStopEvent>;\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  onStop$: Observable<StartStopEvent>;\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  showBackground$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  showForeground$: Observable<ShowEvent>;\n\n  // Private properties\n  private bgClosing: BehaviorSubject<ShowEvent>;\n  private defaultConfig: NgxUiLoaderConfig;\n  private fgClosing: BehaviorSubject<ShowEvent>;\n  private loaders: Loaders;\n  private onStart: Subject<StartStopEvent>;\n  private onStop: Subject<StartStopEvent>;\n  private showBackground: BehaviorSubject<ShowEvent>;\n  private showForeground: BehaviorSubject<ShowEvent>;\n\n  /**\n   * Constructor\n   * @param config\n   */\n  constructor(@Optional() @Inject(NGX_UI_LOADER_CONFIG_TOKEN) private config: NgxUiLoaderConfig) {\n\n    this.defaultConfig = { ...DEFAULT_CONFIG };\n\n    if (this.config) {\n      if (this.config.threshold && this.config.threshold <= 0) {\n        this.config.threshold = DEFAULT_CONFIG.threshold;\n      }\n      this.defaultConfig = { ...this.defaultConfig, ...this.config };\n    }\n\n    this.loaders = {};\n    this.showForeground = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.showForeground$ = this.showForeground.asObservable();\n    this.showBackground = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.showBackground$ = this.showBackground.asObservable();\n    this.fgClosing = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.foregroundClosing$ = this.fgClosing.asObservable();\n    this.bgClosing = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.backgroundClosing$ = this.bgClosing.asObservable();\n\n    this.onStart = new Subject<StartStopEvent>();\n    this.onStart$ = this.onStart.asObservable();\n    this.onStop = new Subject<StartStopEvent>();\n    this.onStop$ = this.onStop.asObservable();\n  }\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  initLoaderData(loaderId: string): void {\n    let isMaster = false;\n    if (loaderId === this.defaultConfig.masterLoaderId) {\n      this.throwErrorIfMasterLoaderExists(true);\n      isMaster = true;\n    } else { // not master loader\n      this.throwErrorIfLoaderExists(loaderId, true);\n    }\n    if (this.loaders[loaderId]) {\n      this.loaders[loaderId].isBound = true;\n      this.loaders[loaderId].isMaster = isMaster;\n      // emit showEvent after data loader is bound\n      if (this.hasForeground(loaderId)) {\n        this.showForeground.next({ loaderId, isShow: true });\n        this.onStart.next({ loaderId, taskId: UNKNOWN_TASK_ID, isForeground: true });\n      } else {\n        if (this.hasBackground(loaderId)) {\n          this.showBackground.next({ loaderId, isShow: true });\n          this.onStart.next({ loaderId, taskId: UNKNOWN_TASK_ID, isForeground: false });\n        }\n      }\n    } else {\n      this.createLoaderData(loaderId, isMaster, true);\n    }\n  }\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  updateLoaderId(loaderId: string, newLoaderId: string): void {\n    this.throwErrorIfLoaderNotExist(loaderId);\n    if (this.loaders[loaderId].loaderId === this.defaultConfig.masterLoaderId) {\n      console.warn(`[ngx-ui-loader] - Cannot change loaderId of master loader. The current ` +\n        `master's loaderId is \"${this.defaultConfig.masterLoaderId}\". If you really want to ` +\n        `change it, please use NgxUiLoaderModule.forRoot() method.`);\n      return;\n    }\n    if (newLoaderId !== loaderId) {\n      this.throwErrorIfLoaderExists(newLoaderId, true);\n      this.loaders[newLoaderId] = {\n        loaderId: newLoaderId,\n        background: { ...this.loaders[loaderId].background },\n        foreground: { ...this.loaders[loaderId].foreground },\n        isMaster: false,\n        isBound: this.loaders[loaderId].isBound\n      };\n      delete this.loaders[loaderId];\n    }\n  }\n\n  /**\n   * For internal use only. It may be changed in the future.\n   * @docs-private\n   */\n  destroyLoaderData(loaderId: string): void {\n    this.stopLoaderAll(loaderId);\n    delete this.loaders[loaderId];\n  }\n\n  /**\n   * Get default loader configuration\n   * @returns default configuration object\n   */\n  getDefaultConfig(): NgxUiLoaderConfig {\n    return { ...this.defaultConfig };\n  }\n\n  /**\n   * Get all the loaders\n   */\n  getLoaders(): Loaders {\n    return JSON.parse(JSON.stringify(this.loaders));\n  }\n\n  /**\n   * Get data of a specified loader. If loaderId is not provided, it will return data of master loader(if existed)\n   */\n  getLoader(loaderId?: string): Loader {\n    if (loaderId) {\n      this.throwErrorIfLoaderNotExist(loaderId);\n    } else {\n      this.throwErrorIfMasterLoaderNotExist();\n      loaderId = this.defaultConfig.masterLoaderId;\n    }\n    return JSON.parse(JSON.stringify(this.loaders[loaderId]));\n  }\n\n  /**\n   * @deprecated use getLoader() or getLoaders() instead. This will be removed in the version 8.x.x\n   * Return status of master loader\n   */\n  getStatus(): { waitingBackground: Task, waitingForeground: Task } {\n    this.throwErrorIfMasterLoaderNotExist();\n    return {\n      waitingBackground: this.loaders[this.defaultConfig.masterLoaderId].background,\n      waitingForeground: this.loaders[this.defaultConfig.masterLoaderId].foreground\n    };\n  }\n\n  /**\n   * Check whether the queue has a waiting foreground loader with the given `taskId`.\n   * If no `taskId` specified, it will check whether the queue has any waiting foreground loader.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id\n   * @returns boolean\n   */\n  hasForeground(loaderId: string, taskId?: string): boolean {\n    if (this.loaders[loaderId]) {\n      if (taskId) {\n        return this.loaders[loaderId].foreground[taskId] ? true : false;\n      }\n      return Object.keys(this.loaders[loaderId].foreground).length > 0;\n    }\n    return false;\n  }\n\n  /**\n   * Check whether the queue has a waiting background loader with the given `taskId`.\n   * If no `taskId` specified, it will check whether the queue has any waiting background loader.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id\n   * @returns boolean\n   */\n  hasBackground(loaderId: string, taskId?: string): boolean {\n    if (this.loaders[loaderId]) {\n      if (taskId) {\n        return this.loaders[loaderId].background[taskId] ? true : false;\n      }\n      return Object.keys(this.loaders[loaderId].background).length > 0;\n    }\n    return false;\n  }\n\n  /**\n   * Start the foreground loading of loader having `loaderId` with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopLoader() method.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\n   */\n  startLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\n    this.createLoaderData(loaderId, undefined, false);\n\n    const foregroundRunning = this.hasForeground(loaderId);\n    this.loaders[loaderId].foreground[taskId] = Date.now();\n\n    if (!this.loaders[loaderId].isBound) {\n      return;\n    }\n\n    if (!foregroundRunning) {\n      if (this.hasBackground(loaderId)) {\n        this.backgroundCloseout(loaderId);\n        this.showBackground.next({ loaderId, isShow: false });\n      }\n      this.showForeground.next({ loaderId, isShow: true });\n    }\n    this.onStart.next({ loaderId, taskId, isForeground: true });\n  }\n\n  /**\n   * Start the foreground loading of master loader with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stop() method.\n   * NOTE: Really this function just wraps startLoader() function\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\n   */\n  start(taskId: string = DEFAULT_TASK_ID): void {\n    this.startLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Start the background loading of loader having `loaderId` with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopLoaderBackground() method.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\n   */\n  startBackgroundLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\n    this.createLoaderData(loaderId, undefined, false);\n\n    this.loaders[loaderId].background[taskId] = Date.now();\n\n    if (!this.loaders[loaderId].isBound) {\n      return;\n    }\n\n    if (!this.hasForeground(loaderId)) {\n      this.showBackground.next({ loaderId, isShow: true });\n    }\n    this.onStart.next({ loaderId, taskId, isForeground: false });\n  }\n\n  /**\n   * Start the background loading of master loader with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopBackground() method.\n   * NOTE: Really this function just wraps startBackgroundLoader() function\n   * @param taskId the optional task Id of the loading. taskId is set to 'default' by default.\n   */\n  startBackground(taskId: string = DEFAULT_TASK_ID): void {\n    this.startBackgroundLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Stop a foreground loading of loader having `loaderId` with specific `taskId`\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\n   * @returns Object\n   */\n  stopLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\n    this.throwErrorIfLoaderNotExist(loaderId);\n\n    // Update loader data {{{\n    const now = Date.now();\n    if (this.hasForeground(loaderId, taskId)) {\n      if (this.loaders[loaderId].foreground[taskId] + this.defaultConfig.threshold > now) {\n        setTimeout(() => {\n          this.stopLoader(loaderId, taskId);\n        }, this.loaders[loaderId].foreground[taskId] + this.defaultConfig.threshold - now);\n        return;\n      }\n      delete this.loaders[loaderId].foreground[taskId];\n    } else {\n      return;\n    }\n    // }}}\n\n    // Emit ShowEvents to update view {{{\n    if (!this.hasForeground(loaderId)) {\n      this.foregroundCloseout(loaderId);\n      this.showForeground.next({ loaderId, isShow: false });\n      if (this.hasBackground(loaderId)) {\n        setTimeout(() => {\n          if (this.hasBackground(loaderId)) { // still have background tasks\n            this.showBackground.next({ loaderId, isShow: true });\n          }\n        }, WAITING_FOR_OVERLAY_DISAPPEAR);\n      }\n    }\n\n    this.onStop.next({ loaderId, taskId, isForeground: true });\n    // }}}\n  }\n\n  /**\n   * Stop a foreground loading of master loader with specific `taskId`\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\n   * @returns Object\n   */\n  stop(taskId: string = DEFAULT_TASK_ID): void {\n    this.stopLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Stop a background loading of loader having `loaderId` with specific `taskId`\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\n   * @returns Object\n   */\n  stopBackgroundLoader(loaderId: string, taskId: string = DEFAULT_TASK_ID): void {\n    this.throwErrorIfLoaderNotExist(loaderId);\n\n    // Update loader data {{{\n    const now = Date.now();\n    if (this.hasBackground(loaderId, taskId)) {\n      if (this.loaders[loaderId].background[taskId] + this.defaultConfig.threshold > now) {\n        setTimeout(() => {\n          this.stopBackgroundLoader(loaderId, taskId);\n        }, this.loaders[loaderId].background[taskId] + this.defaultConfig.threshold - now);\n        return;\n      }\n      delete this.loaders[loaderId].background[taskId];\n    } else {\n      return;\n    }\n    // }}}\n\n    // Emit ShowEvents to update view {{{\n    if (!this.hasForeground(loaderId) && !this.hasBackground(loaderId)) {\n      this.backgroundCloseout(loaderId);\n      this.showBackground.next({ loaderId, isShow: false });\n    }\n    this.onStop.next({ loaderId, taskId, isForeground: false });\n    // }}}\n  }\n\n  /**\n   * Stop a background loading of master loader with specific taskId\n   * @param taskId the optional task Id to stop. If not provided, 'default' is used.\n   * @returns Object\n   */\n  stopBackground(taskId: string = DEFAULT_TASK_ID): void {\n    this.stopBackgroundLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Stop all the background and foreground loadings of loader having `loaderId`\n   * @param loaderId the loader Id\n   */\n  stopLoaderAll(loaderId: string): void {\n    this.throwErrorIfLoaderNotExist(loaderId);\n\n    if (this.hasForeground(loaderId)) {\n      this.foregroundCloseout(loaderId);\n      this.showForeground.next({ loaderId, isShow: false });\n    } else if (this.hasBackground(loaderId)) {\n      this.backgroundCloseout(loaderId);\n      this.showBackground.next({ loaderId, isShow: false });\n    }\n    this.loaders[loaderId].foreground = {};\n    this.loaders[loaderId].background = {};\n  }\n\n  /**\n   * Stop all the background and foreground loadings of master loader\n   */\n  stopAll(): void {\n    this.stopLoaderAll(this.defaultConfig.masterLoaderId);\n  }\n\n  /**\n   * Create loader data if it does not exist\n   * @param loaderId\n   * @param isMaster\n   * @param isBound\n   * @docs-private\n   */\n  private createLoaderData(loaderId: string, isMaster: boolean, isBound: boolean): void {\n    if (!this.loaders[loaderId]) {\n      this.loaders[loaderId] = {\n        loaderId,\n        foreground: {},\n        background: {},\n        isMaster,\n        isBound\n      };\n    }\n  }\n\n  /**\n   * Throw error if the loaderId does not exist.\n   * @docs-private\n   */\n  private throwErrorIfLoaderNotExist(loaderId: string): void {\n    if (!this.loaders[loaderId]) {\n      throw new Error(`[ngx-ui-loader] - loaderId \"${loaderId}\" does not exist.`);\n    }\n  }\n\n  /**\n   * Throw error if the loaderId has already existed.\n   * @docs-private\n   */\n  private throwErrorIfLoaderExists(loaderId: string, useIsBoundProp?: boolean): void {\n    if (this.loaders[loaderId] && (this.loaders[loaderId].isBound && useIsBoundProp)) {\n      throw new Error(`[ngx-ui-loader] - loaderId \"${loaderId}\" is duplicated. Please choose another one!`);\n    }\n  }\n\n  /**\n   * Throw error if the master loader has already existed.\n   * @docs-private\n   */\n  private throwErrorIfMasterLoaderExists(useIsBoundProp?: boolean): void {\n    if (this.loaders[this.defaultConfig.masterLoaderId] && (this.loaders[this.defaultConfig.masterLoaderId].isBound && useIsBoundProp)) {\n      throw new Error(`[ngx-ui-loader] - The master loader has already existed. `\n        + `The app should have only one master loader and it should be placed in the root app template`);\n    }\n  }\n\n  /**\n   * Throw error if the master loader does not exist.\n   * @docs-private\n   */\n  private throwErrorIfMasterLoaderNotExist(): void {\n    if (!this.loaders[this.defaultConfig.masterLoaderId]) {\n      throw new Error(`[ngx-ui-loader] - The master loader does not exist.`);\n    }\n  }\n\n  /**\n   * Manage to close foreground loading\n   * @param loaderId the loader id\n   */\n  private foregroundCloseout(loaderId: string): void {\n    this.fgClosing.next({ loaderId, isShow: true });\n    setTimeout(() => {\n      this.fgClosing.next({ loaderId, isShow: false });\n    }, CLOSING_TIME);\n  }\n\n  /**\n   * Manage to close background loading\n   * @param loaderId the loader id\n   */\n  private backgroundCloseout(loaderId: string): void {\n    this.bgClosing.next({ loaderId, isShow: true });\n    setTimeout(() => {\n      this.bgClosing.next({ loaderId, isShow: false });\n    }, CLOSING_TIME);\n  }\n}\n","/**\n * Coerce a value (string) to a number\n * @param value\n * @param fallbackValue\n */\nexport function coerceNumber(value, fallbackValue): number {\n  return !isNaN(parseFloat(value as any)) && !isNaN(Number(value)) ? Number(value) : fallbackValue;\n}\n","import { Component, Input, OnInit, OnChanges, SimpleChanges, SimpleChange, OnDestroy } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl, SafeStyle } from '@angular/platform-browser';\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\nimport { Subscription } from 'rxjs';\n\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\nimport { DirectionType, PositionType, SpinnerType } from './ngx-ui-loader.types';\nimport { POSITION, PB_DIRECTION, SPINNER } from './ngx-ui-loader.enums';\nimport { SPINNER_CONFIG } from './ngx-ui-loader.contants';\nimport { coerceNumber } from './coercion';\nimport { ShowEvent } from './ngx-ui-loader.interfaces';\n\n@Component({\n  selector: 'ngx-ui-loader',\n  templateUrl: './ngx-ui-loader.component.html',\n  styleUrls: ['./ngx-ui-loader.component.scss']\n})\nexport class NgxUiLoaderComponent implements OnChanges, OnDestroy, OnInit {\n\n  @Input() bgsColor: string;\n  @Input() bgsOpacity: number;\n  @Input() bgsPosition: PositionType;\n  @Input() bgsSize: number;\n  @Input() bgsType: SpinnerType;\n  @Input() fgsColor: string;\n  @Input() fgsPosition: PositionType;\n  @Input() fgsSize: number;\n  @Input() fgsType: SpinnerType;\n  @Input() gap: number;\n  @Input() loaderId: string;\n  @Input() logoPosition: PositionType;\n  @Input() logoSize: number;\n  @Input() logoUrl: string;\n  @Input() overlayBorderRadius: string;\n  @Input() overlayColor: string;\n  @Input() pbColor: string;\n  @Input() pbDirection: DirectionType;\n  @Input() pbThickness: number;\n  @Input() hasProgressBar: boolean;\n  @Input() text: string;\n  @Input() textColor: string;\n  @Input() textPosition: PositionType;\n\n  fgDivs: number[];\n  fgSpinnerClass: string;\n  bgDivs: number[];\n  bgSpinnerClass: string;\n  showForeground: boolean;\n  showBackground: boolean;\n  foregroundClosing: boolean;\n  backgroundClosing: boolean;\n\n  trustedLogoUrl: SafeResourceUrl;\n  logoTop: SafeStyle;\n  spinnerTop: SafeStyle;\n  textTop: SafeStyle;\n\n  showForegroundWatcher: Subscription;\n  showBackgroundWatcher: Subscription;\n  foregroundClosingWatcher: Subscription;\n  backgroundClosingWatcher: Subscription;\n\n  defaultConfig: NgxUiLoaderConfig;\n  initialized: boolean;\n\n  /**\n   * Constructor\n   * @param domSanitizer\n   * @param ngxService\n   */\n  constructor(\n    private domSanitizer: DomSanitizer,\n    private ngxService: NgxUiLoaderService) {\n\n    this.initialized = false;\n    this.defaultConfig = this.ngxService.getDefaultConfig();\n\n    this.bgsColor = this.defaultConfig.bgsColor;\n    this.bgsOpacity = this.defaultConfig.bgsOpacity;\n    this.bgsPosition = this.defaultConfig.bgsPosition;\n    this.bgsSize = this.defaultConfig.bgsSize;\n    this.bgsType = this.defaultConfig.bgsType;\n    this.fgsColor = this.defaultConfig.fgsColor;\n    this.fgsPosition = this.defaultConfig.fgsPosition;\n    this.fgsSize = this.defaultConfig.fgsSize;\n    this.fgsType = this.defaultConfig.fgsType;\n    this.gap = this.defaultConfig.gap;\n    this.loaderId = this.defaultConfig.masterLoaderId;\n    this.logoPosition = this.defaultConfig.logoPosition;\n    this.logoSize = this.defaultConfig.logoSize;\n    this.logoUrl = this.defaultConfig.logoUrl;\n    this.overlayBorderRadius = this.defaultConfig.overlayBorderRadius;\n    this.overlayColor = this.defaultConfig.overlayColor;\n    this.pbColor = this.defaultConfig.pbColor;\n    this.pbDirection = this.defaultConfig.pbDirection;\n    this.pbThickness = this.defaultConfig.pbThickness;\n    this.hasProgressBar = this.defaultConfig.hasProgressBar;\n    this.text = this.defaultConfig.text;\n    this.textColor = this.defaultConfig.textColor;\n    this.textPosition = this.defaultConfig.textPosition;\n  }\n\n  /**\n   * On init event\n   */\n  ngOnInit() {\n    this.initializeSpinners();\n    this.ngxService.initLoaderData(this.loaderId);\n    this.determinePositions();\n\n    this.bgsPosition = <PositionType>this.validate('bgsPosition', this.bgsPosition, POSITION, this.defaultConfig.bgsPosition);\n\n    this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl);\n\n    this.pbDirection = <DirectionType>this.validate('pbDirection', this.pbDirection, PB_DIRECTION, this.defaultConfig.pbDirection);\n\n    this.showForegroundWatcher = this.ngxService.showForeground$\n      .subscribe(data => {\n        if (data.loaderId === this.loaderId) {\n          this.showForeground = data.isShow;\n        }\n      });\n\n    this.showBackgroundWatcher = this.ngxService.showBackground$\n      .subscribe(data => {\n        if (data.loaderId === this.loaderId) {\n          this.showBackground = data.isShow;\n        }\n      });\n\n    this.foregroundClosingWatcher = this.ngxService.foregroundClosing$\n      .subscribe(data => {\n        if (data.loaderId === this.loaderId) {\n          this.foregroundClosing = data.isShow;\n        }\n      });\n\n    this.backgroundClosingWatcher = this.ngxService.backgroundClosing$\n      .subscribe(data => {\n        if (data.loaderId === this.loaderId) {\n          this.backgroundClosing = data.isShow;\n        }\n      });\n    this.initialized = true;\n  }\n\n  /**\n   * On changes event\n   * @param changes\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.initialized) {\n      return;\n    }\n\n    const bgsTypeChange: SimpleChange = changes.bgsType;\n    const bgsPositionChange: SimpleChange = changes.bgsPosition;\n    const fgsTypeChange: SimpleChange = changes.fgsType;\n    const loaderIdChange: SimpleChange = changes.loaderId;\n    const logoUrlChange: SimpleChange = changes.logoUrl;\n    const pbDirectionChange: SimpleChange = changes.pbDirection;\n\n    if (fgsTypeChange || bgsTypeChange) {\n      this.initializeSpinners();\n    }\n\n    if (loaderIdChange) {\n      this.ngxService.updateLoaderId(loaderIdChange.previousValue, this.loaderId);\n    }\n\n    this.determinePositions();\n\n    if (bgsPositionChange) {\n      this.bgsPosition = <PositionType>this.validate('bgsPosition', this.bgsPosition, POSITION, this.defaultConfig.bgsPosition);\n    }\n\n    if (logoUrlChange) {\n      this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl);\n    }\n\n    if (pbDirectionChange) {\n      this.pbDirection = <DirectionType>this.validate('pbDirection', this.pbDirection, PB_DIRECTION, this.defaultConfig.pbDirection);\n    }\n  }\n\n  /**\n   * Initialize spinners\n   */\n  private initializeSpinners(): void {\n    this.fgsType = <SpinnerType>this.validate('fgsType', this.fgsType, SPINNER, this.defaultConfig.fgsType);\n    this.bgsType = <SpinnerType>this.validate('bgsType', this.bgsType, SPINNER, this.defaultConfig.bgsType);\n\n    this.fgDivs = Array(SPINNER_CONFIG[this.fgsType].divs).fill(1);\n    this.fgSpinnerClass = SPINNER_CONFIG[this.fgsType].class;\n    this.bgDivs = Array(SPINNER_CONFIG[this.bgsType].divs).fill(1);\n    this.bgSpinnerClass = SPINNER_CONFIG[this.bgsType].class;\n  }\n\n  /**\n   * Determine the positions of spinner, logo and text\n   */\n  private determinePositions(): void {\n    this.fgsPosition = <PositionType>this.validate('fgsPosition', this.fgsPosition, POSITION, this.defaultConfig.fgsPosition);\n    this.logoPosition = <PositionType>this.validate('logoPosition', this.logoPosition, POSITION, this.defaultConfig.logoPosition);\n    this.textPosition = <PositionType>this.validate('textPosition', this.textPosition, POSITION, this.defaultConfig.textPosition);\n    this.gap = coerceNumber(this.gap, this.defaultConfig.gap);\n\n    this.logoTop = 'initial';\n    this.spinnerTop = 'initial';\n    this.textTop = 'initial';\n    const textSize = 24;\n\n    if (this.logoPosition.startsWith('center')) {\n      this.logoTop = '50%';\n    } else if (this.logoPosition.startsWith('top')) {\n      this.logoTop = '30px';\n    }\n\n    if (this.fgsPosition.startsWith('center')) {\n      this.spinnerTop = '50%';\n    } else if (this.fgsPosition.startsWith('top')) {\n      this.spinnerTop = '30px';\n    }\n\n    if (this.textPosition.startsWith('center')) {\n      this.textTop = '50%';\n    } else if (this.textPosition.startsWith('top')) {\n      this.textTop = '30px';\n    }\n\n    if (this.fgsPosition === POSITION.centerCenter) {\n      if (this.logoUrl && this.logoPosition === POSITION.centerCenter) {\n        if (this.text && this.textPosition === POSITION.centerCenter) { // logo, spinner and text\n          this.logoTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% - ${this.fgsSize / 2}px - ${textSize / 2}px - ${this.gap}px)`);\n          this.spinnerTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px - ${textSize / 2}px)`);\n          this.textTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap}px + ${this.fgsSize / 2}px)`);\n        } else { // logo and spinner\n          this.logoTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% - ${this.fgsSize / 2}px - ${this.gap / 2}px)`);\n          this.spinnerTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`);\n        }\n      } else {\n        if (this.text && this.textPosition === POSITION.centerCenter) { // spinner and text\n          this.spinnerTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`);\n          this.textTop = this.domSanitizer\n            .bypassSecurityTrustStyle(`calc(50% + ${this.fgsSize / 2}px + ${this.gap / 2}px)`);\n        }\n      }\n    } else {\n      if (this.logoUrl && this.logoPosition === POSITION.centerCenter\n        && this.text && this.textPosition === POSITION.centerCenter) { // logo and text\n        this.logoTop = this.domSanitizer\n          .bypassSecurityTrustStyle(`calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`);\n        this.textTop = this.domSanitizer\n          .bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`);\n      }\n    }\n  }\n\n  private validate(inputName: string, value: string, validTypeObj: {}, fallbackValue: string): string {\n    if (Object.keys(validTypeObj).map(k => validTypeObj[k]).findIndex(v => v === value) === -1) {\n      console.error(`[ngx-ui-loader] - ${inputName} (\"${value}\") is invalid. `\n        + `Default value \"${fallbackValue}\" is used.`);\n      return fallbackValue;\n    }\n    return value;\n  }\n\n  /**\n   * On destroy event\n   */\n  ngOnDestroy() {\n    this.ngxService.destroyLoaderData(this.loaderId);\n    if (this.showForegroundWatcher) {\n      this.showForegroundWatcher.unsubscribe();\n    }\n    if (this.showBackgroundWatcher) {\n      this.showBackgroundWatcher.unsubscribe();\n    }\n    if (this.foregroundClosingWatcher) {\n      this.foregroundClosingWatcher.unsubscribe();\n    }\n    if (this.backgroundClosingWatcher) {\n      this.backgroundClosingWatcher.unsubscribe();\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnDestroy, Renderer2, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\nimport { coerceNumber } from './coercion';\nimport { WAITING_FOR_OVERLAY_DISAPPEAR } from './ngx-ui-loader.contants';\n\n@Directive({ selector: '[ngxUiLoaderBlurred]' })\nexport class NgxUiLoaderBlurredDirective implements OnInit, OnDestroy {\n\n  private blurNumber: number;\n\n  @Input()\n  get blur(): number {\n    return this.blurNumber;\n  }\n\n  set blur(value: number) {\n    this.blurNumber = coerceNumber(value, this.ngxUiLoaderService.getDefaultConfig().blur);\n  }\n\n  @Input() loaderId: string;\n\n  showForegroundWatcher: Subscription;\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private ngxUiLoaderService: NgxUiLoaderService\n  ) {\n    this.blurNumber = this.ngxUiLoaderService.getDefaultConfig().blur;\n    this.loaderId = this.ngxUiLoaderService.getDefaultConfig().masterLoaderId;\n  }\n\n  /**\n   * On Init event\n   */\n  ngOnInit() {\n    this.showForegroundWatcher = this.ngxUiLoaderService.showForeground$\n      .subscribe(data => {\n        if (data.loaderId === this.loaderId) {\n          if (data.isShow) {\n            const filterValue = `blur(${this.blurNumber}px)`;\n            this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', filterValue);\n            this.renderer.setStyle(this.elementRef.nativeElement, 'filter', filterValue);\n          } else {\n            setTimeout(() => {\n              if (!this.ngxUiLoaderService.hasForeground(data.loaderId)) {\n                this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', 'none');\n                this.renderer.setStyle(this.elementRef.nativeElement, 'filter', 'none');\n              }\n            }, WAITING_FOR_OVERLAY_DISAPPEAR);\n          }\n        }\n      });\n  }\n\n  /**\n   * On destroy event\n   */\n  ngOnDestroy() {\n    if (this.showForegroundWatcher) {\n      this.showForegroundWatcher.unsubscribe();\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\nimport { NgxUiLoaderComponent } from './ngx-ui-loader.component';\nimport { NgxUiLoaderBlurredDirective } from './ngx-ui-loader-blurred.directive';\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\nimport { NgxUiLoaderConfig } from './ngx-ui-loader-config';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    NgxUiLoaderComponent,\n    NgxUiLoaderBlurredDirective,\n  ],\n  exports: [\n    NgxUiLoaderComponent,\n    NgxUiLoaderBlurredDirective,\n  ]\n})\nexport class NgxUiLoaderModule {\n\n  /**\n   * forRoot\n   * @param ngxUiLoaderConfig\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(ngxUiLoaderConfig: NgxUiLoaderConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxUiLoaderModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_CONFIG_TOKEN,\n          useValue: ngxUiLoaderConfig\n        }\n      ]\n    };\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderRouterConfig } from './ngx-ui-loader-router-config';\n\n/**\n * Injection token for ngx-ui-loader-router configuration\n */\nexport const NGX_UI_LOADER_ROUTER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderRouterConfig>('ngxUiLoaderRouterCustom.config');\n","/**\n * Router loader id\n */\nexport const ROUTER_LOADER_ID = '$_router_loader';\n","import { NgModule, ModuleWithProviders, Inject, Optional, SkipSelf } from '@angular/core';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\n\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\nimport { NgxUiLoaderRouterConfig } from './ngx-ui-loader-router-config';\nimport { NGX_UI_LOADER_ROUTER_CONFIG_TOKEN } from './ngx-ui-loader-router-config.token';\nimport { ROUTER_LOADER_ID } from './ngx-ui-loader-router.constants';\n\n@NgModule({})\nexport class NgxUiLoaderRouterModule {\n\n  /**\n   * forRoot\n   * @param routerConfig Configuration\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(routerConfig: NgxUiLoaderRouterConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxUiLoaderRouterModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_ROUTER_CONFIG_TOKEN,\n          useValue: routerConfig\n        }\n      ]\n    };\n  }\n\n  /**\n   * Constructor\n   *\n   * @param parentModule\n   * @param config\n   * @param router\n   * @param ngxUiLoaderService\n   */\n  constructor(\n    @Optional() @SkipSelf() parentModule: NgxUiLoaderRouterModule,\n    @Optional() @Inject(NGX_UI_LOADER_ROUTER_CONFIG_TOKEN) config: NgxUiLoaderRouterConfig,\n    router: Router,\n    ngxUiLoaderService: NgxUiLoaderService) {\n\n    if (parentModule) {\n      throw new Error('[ngx-ui-loader] - NgxUiLoaderRouterModule is already loaded. It should be imported in the root `AppModule` only!');\n    }\n\n    let defaultConfig: NgxUiLoaderRouterConfig = {\n      loaderId: ngxUiLoaderService.getDefaultConfig().masterLoaderId,\n      showForeground: true\n    };\n\n    if (config) {\n      defaultConfig = { ...defaultConfig, ...config };\n    }\n\n    router.events\n      .subscribe(event => {\n        if (event instanceof NavigationStart) {\n          if (defaultConfig.showForeground) {\n            ngxUiLoaderService.startLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\n          } else {\n            ngxUiLoaderService.startBackgroundLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\n          }\n        }\n\n        if (event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\n          if (defaultConfig.showForeground) {\n            ngxUiLoaderService.stopLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\n          } else {\n            ngxUiLoaderService.stopBackgroundLoader(defaultConfig.loaderId, ROUTER_LOADER_ID);\n          }\n        }\n      });\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderHttpConfig } from './ngx-ui-loader-http-config';\n\n/**\n * Injection token for ngx-ui-loader-http configuration\n */\nexport const NGX_UI_LOADER_HTTP_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderHttpConfig>('ngxUiLoaderHttpCustom.config');\n","/**\n * Http loader id\n */\nexport const HTTP_LOADER_ID = '$_http-loader';\n","import { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\nimport { NgxUiLoaderHttpConfig } from './ngx-ui-loader-http-config';\nimport { HTTP_LOADER_ID } from './ngx-ui-loader-http.constants';\n\n@Injectable()\nexport class NgxUiLoaderHttpInterceptor implements HttpInterceptor {\n\n  private count: number;\n  private defaultConfig: NgxUiLoaderHttpConfig;\n\n  /**\n   * Constructor\n   * @param config\n   * @param ngxUiLoaderService\n   */\n  constructor(@Optional() @Inject(NGX_UI_LOADER_HTTP_CONFIG_TOKEN) config: NgxUiLoaderHttpConfig,\n    private ngxUiLoaderService: NgxUiLoaderService) {\n\n    this.count = 0;\n    this.defaultConfig = {\n      loaderId: this.ngxUiLoaderService.getDefaultConfig().masterLoaderId,\n      showForeground: false\n    };\n\n    if (config) {\n      if (config.exclude) {\n        config.exclude = config.exclude.map(url => url.toLowerCase());\n      }\n      this.defaultConfig = { ...this.defaultConfig, ...config };\n    }\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (this.defaultConfig.exclude) {\n      // do not show the loader for api url in the `exclude` list\n      if (this.defaultConfig.exclude.findIndex(url => req.url.toLowerCase().startsWith(url)) !== -1) {\n        return next.handle(req);\n      }\n    }\n\n    this.count++;\n    if (this.defaultConfig.showForeground) {\n      if (!this.ngxUiLoaderService.hasForeground(this.defaultConfig.loaderId, HTTP_LOADER_ID)) {\n        this.ngxUiLoaderService.startLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\n      }\n    } else {\n      if (!this.ngxUiLoaderService.hasBackground(this.defaultConfig.loaderId, HTTP_LOADER_ID)) {\n        this.ngxUiLoaderService.startBackgroundLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\n      }\n    }\n\n    return next.handle(req).pipe(finalize(() => {\n      this.count--;\n      if (this.count === 0) {\n        if (this.defaultConfig.showForeground) {\n          this.ngxUiLoaderService.stopLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\n        } else {\n          this.ngxUiLoaderService.stopBackgroundLoader(this.defaultConfig.loaderId, HTTP_LOADER_ID);\n        }\n      }\n    }));\n  }\n}\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { NgxUiLoaderHttpInterceptor } from './ngx-ui-loader-http.interceptor';\nimport { NgxUiLoaderHttpConfig } from './ngx-ui-loader-http-config';\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\n\n@NgModule({\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: NgxUiLoaderHttpInterceptor,\n      multi: true\n    }\n  ],\n})\nexport class NgxUiLoaderHttpModule {\n\n  /**\n   * Constructor\n   * @param parentModule optional\n   */\n  constructor(@Optional() @SkipSelf() parentModule: NgxUiLoaderHttpModule) {\n    if (parentModule) {\n      throw new Error('[ngx-ui-loader] - NgxUiLoaderHttpModule is already loaded. It should be imported in the root `AppModule` only!');\n    }\n  }\n\n  /**\n   * forRoot\n   * @param httpConfig Configuration\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(httpConfig: NgxUiLoaderHttpConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxUiLoaderHttpModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_HTTP_CONFIG_TOKEN,\n          useValue: httpConfig\n        }\n      ]\n    };\n  }\n}\n"]}